INTF 3 "28th July 2021" "GNU" "_printf Manual"
.SH NAME
_printf () \- The _printf function reflects the functionality of the printf function from the C standard library

.SH SYNOPSIS
.B #include "holberton.h"
.PP
.B int printf(const char \fI*format\fR,
.B ...)


.SH DESCRIPTION

.PP
_printf takes one argument, an int, and prints it as specified below.

.B Return Value

If succesful, the function will return the number of characters printed, except for the null byte used to end output to strings.

.PP

.B Format of the format string

The format string is a character string, beginning and ending in its initial shift state, if any. The format string is composed of zero or more directives: ordinary characters (not %), which are copied unchanged to the output stream; and conversion specifications, each of which results in fetching zero or more subsequent arguments. Each conversion specification is introduced by the character %, and ends with a conversion specifier.
.PP

.B Format specifiers

A character that specifies the type of conversion to be applied. The conversion specifiers and their meanings are:

.B c
.RS 6

If no l modifier is present, the int argument is converted to an unsigned char, and the resulting character is written.

.RE

.B s
.RS 6

If no l modifier is present: The const char * argument is expected to be a pointer to an array of character type (pointer to a string). Characters from the array are written up to (but not including) a terminating null byte ('\0'); if a precision is specified, no more than the number specified are written. If a precision is given, no null byte need be present; if the precision is not specified, or is greater than the size of the array, the array must contain a terminating null byte.

.RE

.B d, i
.RS 6

The int argument is converted to signed decimal notation. The precision, if any, gives the minimum number of digits that must appear; if the converted value requires fewer digits, it is padded on the left with zeros. The default precision is 1. When 0 is printed with an explicit precision 0, the output is empty.

.RE

.B %
.RS 6

A '%' is written. No argument is converted. The complete format specification is '%%'.

.RE

.SH NOTES

At the tme the program does not support flag characters, field width, precisions nor length modifers.

.SH EXAMPLE

.RS 3

In order to print a sentence with format specifiers:

.RE

.RS 6

#include "holberton.h"

_printf("Why, sometimes I've believed as many as %d impossible things before %s.", 6, "breakfast");

.RE

.RS 6

Output: "Why, sometimes I've believed as many as 6 impossible things before breakfast."

.RE


.SH "SEE ALSO"
.B printf(3)
.SH AUTHOR
.B
Ayrton Coelho, Marcelo Arbiza.

